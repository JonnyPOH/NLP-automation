name: Deploy Lambda with ECR Private

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Log in to Amazon ECR
    - name: Log in to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true

    # Step 4: Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -t my-lambda-function .

    # Step 5: Tag Docker Image
    - name: Tag Docker Image
      run: |
        docker tag my-lambda-function:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-lambda-function:latest

    # Step 6: Push Docker Image to Amazon ECR
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-lambda-function:latest

    # Step 7: Deploy Lambda Function with ECR Image
    - name: Update Lambda Function
      run: |
        aws lambda update-function-code \
          --function-name TranscriptProcessorFunction \
          --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-lambda-function:latest \
          --region ${{ secrets.AWS_REGION }}
